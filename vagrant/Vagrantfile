# -*- mode: ruby -*-
# vi: set ft=ruby :

$CurrentBox = (ENV['BOX_NAME'] || 'ubuntu').downcase
$PortOffset = (ENV['BOX_PORT_OFFSET'] || 0).to_i
$CPUS       = (ENV['BOX_NUM_OF_CPUS'] || 1).to_i.abs
$Memory     = (ENV['BOX_MEM'] || 512).to_i
$SkipNGINX  = !ENV['BOX_SKIP_NGINX'].nil?


ENV['LC_ALL'] = 'en_US.UTF-8'

Vagrant.configure("2") do |config|

  if $CurrentBox == 'ubuntu'
    config.vm.box = 'ubuntu/trusty64'
  elsif $CurrentBox == 'centos'
    config.vm.box = 'bento/centos-7.2'
  else
    bye_bye
  end

  config.vm.provider 'virtualbox' do |vb|
    vb.name = "easy-lotto-benchmark-v2-#{$CurrentBox}"
    vb.memory = $Memory
    vb.cpus = $CPUS
    # vb.gui = true
    # vb.customize ["modifyvm", :id, "--memory", "512"]
  end

  args_ok

  config.vm.synced_folder '../', '/webapp', create: true, group: 'vagrant', owner: 'vagrant'

  # config.ssh.username = 'root'
  # config.ssh.password = 'vagrant'
  config.ssh.insert_key = 'false'

  config.vm.network :forwarded_port, guest: 3000, host: ( 3000 + $PortOffset )
  config.vm.network :forwarded_port, guest: 5432, host: ( 5432 + $PortOffset )
  config.vm.network :forwarded_port, guest: 8080, host: ( 8080 + $PortOffset )

  config.vm.provision :shell, path: './scripts/install-rvm.sh', args: 'stable', privileged: false

  if $CurrentBox == 'ubuntu'

    config.vm.provision :shell, path: './scripts/install-ruby.sh', args: '2.3.0 rails -v 4.2.7', privileged: false
    config.vm.provision :shell, path: './scripts/ubuntu.sh'
    config.vm.provision :shell, path: './scripts/install-postgres-apt.sh', args: '9.5'

    if !$SkipNGINX
      config.vm.provision :shell, path: './scripts/install-nginx-apt.sh'
    end

    config.vm.provision :shell, path: './scripts/post-install.sh', args: '', privileged: false

  elsif $CurrentBox == 'centos'

    config.vm.provision :shell, path: './scripts/install-ruby.sh', args: '2.3.0 rails:4.2.7', privileged: false

    config.vm.provision :shell, path: './scripts/centos.sh'
    config.vm.provision :shell, path: './scripts/install-postgres-yum.sh'

    if !$SkipNGINX
      config.vm.provision :shell, path: './scripts/install-nginx-yum.sh'
    end

    config.vm.provision :shell, path: './scripts/post-install.sh', args: 'pg -- --with-pg-config=/usr/pgsql-9.5/bin/pg_config', privileged: false

  end

end

def args_ok
  puts '--------------------------------'
  puts " * BoxName    : #{$CurrentBox} "
  puts " * PortOffset : #{$PortOffset} "
  puts " * CPUS       : #{$CPUS} "
  puts " * Memory     : #{$Memory} Mb "
  puts " * SkipNGINX  : #{$SkipNGINX} "
  puts '--------------------------------'
end

def bye_bye
  puts '--------------------------------'
  puts " ** Invalid BoxName '#{$CurrentBox}' ** "
  puts '--------------------------------'
  abort
end

# -*- mode: ruby -*-
# vi: set ft=ruby :

$CurrentBox = (ENV['BOX_NAME'] || 'ubuntu').downcase
$PortOffset = (ENV['BOX_PORT_OFFSET'] || 0).to_i

ENV['LC_ALL'] = 'en_US.UTF-8'

Vagrant.configure("2") do |config|

  if $CurrentBox == 'ubuntu'
    config.vm.box = 'ubuntu/trusty64'
  elsif $CurrentBox == 'centos'
    config.vm.box = 'bento/centos-7.2'
  else
    bye_bye
  end

  args_ok

  config.vm.provider 'virtualbox' do |vb|
    vb.name = "easy-lotto-benchmark-#{$CurrentBox}"
    vb.memory = "512"
    vb.cpus = 1
    # vb.gui = true
    # vb.customize ["modifyvm", :id, "--memory", "512"]
  end

  config.vm.synced_folder '../', '/webapp', create: true, group: 'vagrant', owner: 'vagrant'

  # config.ssh.username = 'root'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = 'false'

  config.vm.network :forwarded_port, guest: 3000, host: ( 3000 + $PortOffset )
  config.vm.network :forwarded_port, guest: 5432, host: ( 5432 + $PortOffset )

  #  the same for centos and ubuntu

  config.vm.provision :shell, path: 'install-rvm.sh', args: 'stable', privileged: false
  config.vm.provision :shell, path: 'install-ruby.sh', args: '2.3.0 rails -v 4.2.7', privileged: false
  # config.vm.provision :shell, path: 'install-ruby.sh', args: '2.3.0', privileged: false

  if $CurrentBox == 'ubuntu'
    config.vm.provision :shell, path: 'ubuntu.sh', privileged: true
    # config.vm.provision :shell, inline: $FixLocale, privileged: false
    # config.vm.provision :shell, inline: $FixLocale, privileged: true
    config.vm.provision :shell, path: 'install-postgres-apt.sh', args: '9.5', privileged: true
  elsif $CurrentBox == 'centos'
    config.vm.provision :shell, path: 'centos.sh', privileged: true
    config.vm.provision :shell, path: 'install-postgres-yum.sh', privileged: true
  end

end

$FixLocale = <<SCRIPT
  if grep -Fq 'LC_CTYPE' ~/.bashrc; then
    echo 'Locale already configured...'
  else
    echo "export LC_CTYPE=en_US.UTF-8" >> ~/.bashrc
    echo "export LC_ALL=en_US.UTF-8" >> ~/.bashrc
  fi
SCRIPT

def args_ok
  puts '--------------------------------'
  puts " * BoxName    '#{$CurrentBox}' "
  puts " * PortOffset #{$PortOffset} "
  puts '--------------------------------'
end

def bye_bye
  puts '--------------------------------'
  puts " ** Invalid BoxName '#{$CurrentBox}' ** "
  puts '--------------------------------'
  abort
end
